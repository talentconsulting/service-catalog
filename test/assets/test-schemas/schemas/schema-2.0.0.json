{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "Service Metadata",
  "description": "Describes the details about a service so they can be manipulated programmatically",
  "version": "2.0.0",
  "type": "object",
  "required": [
    "name",
    "owner",
    "repo",
    "runbook",
    "contracts",
    "dependencies",
    "events",
    "team"
  ],
  "additionalProperties": false,
  "properties": {
    "contracts": {
      "description": "The contracts this service supports",
      "type": "array",
      "items": {
        "$ref": "#/definitions/contract"
      }
    },
    "name": {
      "description": "The service name",
      "$ref": "#/definitions/servicename"
    },
    "owner": {
      "description": "The email address of the service owner",
      "type": "string",
      "format": "email"
    },
    "vision": {
      "description": "This is a sentence, or at maximum a short paragraph, that describes the compelling idea or values or future state for a particular service.",
      "type": "string"
    },
    "repo": {
      "description": "The github repository URL that contains the code for the service",
      "type": "string",
      "format": "uri"
    },
    "runbook": {
      "description": "The URI to the runbook for this service.",
      "type": "string",
      "format": "uri"
    },
    "format": {
      "type": "string"
    },
    "team": {
      "type": "string",
      "enum": ["to be dynamically filled in"]
    },
    "dependencies": {
      "description": "Services the service depends on.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "description": "Critical dependencies which the service has to rely on otherwise it will not be able to function at all.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/dependency"
          }
        },
        "non-critical": {
          "description": "Non-critical dependencies which the service has to rely on. If these are not healthy the service can continue it's function.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/dependency"
          }
        }
      }
    },
    "environment": {
      "description": "A list of environment variables the service requires.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string"
      }
    },
    "events": {
      "description": "A list of events that the service interacts with. Supply an empty array if the service neither consumes nor produces events. A topic and at least one of either consumes or produces must be specified to be a valid array.",
      "type": "array",
      "minItems": 0,
      "additionalProperties": false,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "uniqueItems": true,
        "required": [
          "topic"
        ],
        "anyOf": [
          {
            "required": [
              "consumes"
            ]
          },
          {
            "required": [
              "produces"
            ]
          }
        ],
        "properties": {
          "topic": {
            "description": "The topic the event is for/from.",
            "type": "string"
          },
          "consumes": {
            "description": "Events that the service listens for.",
            "$ref": "#/definitions/eventlist"
          },
          "produces": {
            "description": "Events that the service sends through the Event Sink.",
            "$ref": "#/definitions/eventlist"
          }
        }
      }
    }
  },
  "definitions": {
    "contract": {
      "description": "The contract the service provides",
      "properties": {
        "role": {
          "$ref": "#/definitions/role"
        },
        "protocol": {
          "$ref": "#/definitions/protocol"
        }
      }
    },
    "protocol": {
      "description": "The protocol the service uses to communicate with.",
      "enum": [
        "http",
        "amqp",
        "kafka",
        "mongodb",
        "ftp",
        "sftp",
        "smtp",
        "s3"
      ]
    },
    "role": {
      "description": "The role the service provides",
      "enum": [
        "api",
        "consumer",
        "producer",
        "ui",
        "storage",
        "external",
        "task"
      ]
    },
    "servicename": {
      "type": "string",
      "pattern": "^[a-z\\-]+\\.[a-z0-9\\-]+$"
    },
    "eventname": {
      "type": "string"
    },
    "eventlist": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/eventname"
      }
    },
    "dependency": {
      "type": "object",
      "required": [
        "name",
        "role",
        "protocol"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The service name of the dependency",
          "$ref": "#/definitions/servicename"
        },
        "role": {
          "description": "The role the service provides",
          "$ref": "#/definitions/role"
        },
        "protocol": {
          "description": "The protocol the service provides",
          "$ref": "#/definitions/protocol"
        }
      }
    }
  }
}
